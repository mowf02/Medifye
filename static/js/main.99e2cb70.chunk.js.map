{"version":3,"sources":["Assets/header-small.png","Assets/header-large.png","Assets/loader.gif","hash.js","config.js","Components/SubmitButton.js","Views/Login.js","Components/Mood/ResultItem.js","Api.js","Components/Mood/Dashboard.js","Components/Loading.js","Components/Footer.js","Views/MainDisplay.js","App.js","index.js"],"names":["module","exports","hash","window","location","substring","split","reduce","initial","item","parts","decodeURIComponent","loginURL","process","join","SubmitButton","this","props","isLoggedIn","Button","className","variant","onClick","handleLogin","React","Component","Login","Container","Col","duration","srcSet","HeaderSmall","media","HeaderLarge","alt","delay","href","target","rel","ResultItem","state","isPlaying","isHovering","handleMouseHover","bind","playTrack","previewURL","setState","toggleHoverState","position","type","title","subtitle","percentage","image","searchTerm","resultCoverStyle","backgroundImage","backgroundColor","trackInfo","playbackBlock","handleClick","width","height","viewBox","fill","xmlns","cx","cy","r","stroke","d","style","id","onMouseEnter","onMouseLeave","uri","Api","api_token","token","playlistID","uris","endpoint","jsonData","config","headers","Authorization","axios","post","userID","name","description","isPublic","public","response","data","get","time_range","limit","params","items","searchTerms","owner","q","res","result","playlists","filter","isTermInName","forEach","term","toLowerCase","includes","display_name","fields","tracks","features","ids","track","push","results","audio_features","trackFeatures","feature","correspondingTrack","find","popularity","Object","keys","Dashboard","buttonCopy","currentlyPlaying","finalPercentages","index","isLoading","label","moreDanceableRecommendations","recommendationsPresent","resultsTableHeading","seed_artists","seed_genres","seed_tracks","showValidation","targetTrackDanceability","userInput","userTrack","userTrackDanceability","getTrackFeatures","handleChange","resetMedifyer","showNextRecommendation","showValidationError","event","preventDefault","audioFeaturesEndpoint","recommendationsEndpoint","re","test","length","match","danceabilityScore","danceability","targetDanceability","toFixed","tracksHavePreviewURL","preview_url","resultTrackID","resultsDanceability","resultDanceabilityPercentages","alternativeRecommendations","value","looper","document","getElementById","audioPlayer","activeTrack","paused","play","pause","src","currentTime","Audio","setAttribute","onended","volume","append","API","requestFeatures","load","console","log","status","handleTimeout","uriInput","focus","clearInterval","interval","startingTrack","showInput","map","key","artists","undefined","album","images","url","external_urls","spotify","fluid","onSubmit","onChange","ref","input","onKeyDown","Loading","display","flexDirection","alignItems","justifyContent","loader","maxHeight","maxWidth","MainDisplay","childComponentIsLoading","updateLoadingStatus","Fragment","loadDashboard","App","_token","access_token","replace","ReactDOM","render"],"mappings":"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","file":"static/js/main.99e2cb70.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/header-small.9748ff27.png\";","module.exports = __webpack_public_path__ + \"static/media/header-large.0bc5fa64.png\";","module.exports = __webpack_public_path__ + \"static/media/loader.285f3251.gif\";","const hash = window.location.hash\n  .substring(1)\n  .split(\"&\")\n  .reduce(function (initial, item) {\n    if (item) {\n      var parts = item.split(\"=\");\n      initial[parts[0]] = decodeURIComponent(parts[1]);\n    }\n    return initial;\n  }, {});\n\nexport default hash;\n","export const authEndpoint = \"https://accounts.spotify.com/authorize\";\n\n// Uses environment variables from .env in root directory\nexport const clientId = process.env.REACT_APP_SPOTIFY_CLIENT_ID;\nexport const redirectUri = process.env.REACT_APP_REDIRECT_URI;\nexport const publicUrl = process.env.REACT_APP_PUBLIC_URL;\n\nexport const scopes = [\n  \"playlist-read-private\",\n  \"user-top-read\",\n  \"user-read-recently-played\",\n  \"playlist-modify-private\",\n  \"playlist-modify-public\",\n];\nexport const loginURL = `${authEndpoint}?client_id=${clientId}&redirect_uri=${publicUrl}&scope=${scopes.join(\n  \"%20\"\n)}&response_type=token&show_dialog=true`;\n","import React from \"react\";\nimport Button from \"react-bootstrap/Button\";\n\nclass SubmitButton extends React.Component {\n  render() {\n    if (this.props.isLoggedIn) {\n      return null;\n    }\n    return (\n      <div>\n        <Button\n          className=\"button-primary\"\n          variant=\"success\"\n          onClick={() => this.props.handleLogin()}\n        >\n          Login with Spotify\n        </Button>\n      </div>\n    );\n  }\n}\n\nexport default SubmitButton;\n","import React from \"react\";\nimport SubmitButton from \"../Components/SubmitButton\";\nimport Col from \"react-bootstrap/Col\";\nimport Container from \"react-bootstrap/Container\";\nimport Fade from \"react-reveal/Fade\";\nimport HeaderSmall from \"../Assets/header-small.png\";\nimport HeaderLarge from \"../Assets/header-large.png\";\n\nfunction Login(props) {\n  if (props.isLoggedIn) {\n    return null;\n  }\n  return (\n    <Container>\n      <Col className=\"d-flex align-items-center flex-column login justify-content-center login\">\n        <Fade duration={2000}>\n          <picture>\n            <source srcSet={`${HeaderSmall} 1x`} media=\"(max-width: 768px)\" />\n            <img\n              className=\"login-img\"\n              srcSet={`${HeaderLarge} 2x`}\n              alt=\"Full Logo\" />\n          </picture>\n          <Fade delay={1000}>\n            <SubmitButton\n              isLoggedIn={props.isLoggedIn}\n              handleLogin={() => props.handleLogin()}\n            />\n          </Fade>\n          <Fade delay={2000}>\n            <h6 className=\"mt-5\">\n              {\" \"}\n              Created by{\" \"}\n              <a\n                href=\"http://lizmowforth.com/\"\n                target=\"_blank\"\n                rel=\"noopener noreferrer\"\n              >\n                {\" \"}\n                Liz Mowforth{\" \"}\n              </a>{\" \"}\n            </h6>\n          </Fade>\n        </Fade>\n      </Col>\n    </Container>\n  );\n}\n\nexport default Login;\n","import React from \"react\";\nimport \"../../result.css\";\nimport Fade from \"react-reveal/Fade\";\n\nclass ResultItem extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      isPlaying: false,\n      isHovering: false,\n    };\n    this.handleMouseHover = this.handleMouseHover.bind(this);\n  }\n\n  handleClick() {\n    this.props.playTrack(this.props.previewURL);\n  }\n\n  handleMouseHover() {\n    this.setState(this.toggleHoverState);\n  }\n\n  toggleHoverState(state) {\n    return {\n      isHovering: !state.isHovering,\n    };\n  }\n\n  render() {\n    const {\n      type,\n      position,\n      title,\n      subtitle,\n      percentage,\n      searchTerm,\n      image,\n      isPlaying,\n    } = this.props;\n\n    const resultCoverStyle = image\n      ? { backgroundImage: `url(${image})` }\n      : { backgroundColor: \"black\" };\n\n    let trackInfo = (\n      <Fade>\n          <span className=\"order-number\">{position}</span>\n          <div className=\"result-info\">\n            <span className=\"result-summary\">\n              <span className=\"result-danceability\">{percentage} danceable</span>\n              <span className=\"result-name\" alt=\"View on Spotify\">{title}</span>\n              <span className=\"result-artist\" alt=\"View on Spotify\">{subtitle}</span>\n            </span>\n          </div>\n      </Fade>\n    );\n\n    let playbackBlock = (\n      <div className=\"wrapper-artwork\">\n        { isPlaying ? (<svg className=\"icon-pause\" onClick={() => this.handleClick()} width=\"48\" height=\"48\" viewBox=\"0 0 24 24\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n        <circle cx=\"12\" cy=\"12\" r=\"11.5\" fill=\"black\" stroke=\"white\"/>\n        <path d=\"M11 16.5H8.75V7.5H11V16.5Z\" fill=\"white\"/>\n        <path d=\"M15.5 16.5H13.25V7.5H15.5V16.5Z\" fill=\"white\"/>\n        </svg>) : <span></span> }\n        <svg className=\"icon-play\" onClick={() => this.handleClick()} width=\"48\" height=\"48\" viewBox=\"0 0 24 24\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n        <circle cx=\"12\" cy=\"12\" r=\"11.5\" fill=\"black\" stroke=\"white\"/>\n        <path d=\"M17 12L9.5 16.3301L9.5 7.66987L17 12Z\" fill=\"white\"/>\n        </svg>\n        <span className=\"result-cover\" style={resultCoverStyle}></span>\n      </div>\n    );\n\n    let item = {};\n        item = (\n          <div className=\"wrapper\" id=\"result-item\">\n            <div\n              className=\"result-item\"\n              onMouseEnter={this.handleMouseHover}\n              onMouseLeave={this.handleMouseHover}\n            >\n              <a className=\"result-track\" href={this.props.uri} rel=\"noopener noreferrer\" target=\"_blank\">\n                {trackInfo}\n              </a>\n                {playbackBlock}\n            </div>\n          </div>\n        );\n\n    return item;\n  }\n}\n\nexport default ResultItem;\n","import axios from \"axios\";\nclass Api {\n  constructor(api_token) {\n    this.token = api_token;\n  }\n\n  /**\n   * Gets user's ID\n   * https://developer.spotify.com/documentation/web-api/reference/users-profile/get-current-users-profile/\n   * @param  {string} playlistID - The type of entity to return. Valid values: artists or tracks.\n   * * @param  {Array<string>} playlistID - The type of entity to return. Valid values: artists or tracks.\n   * @return An array of track or artists objects\n   */\n  async addItemsToPlaylist(playlistID, uris) {\n    const endpoint = `\thttps://api.spotify.com/v1/playlists/${playlistID}/tracks`;\n    const jsonData = { uris };\n\n    // set the headers\n    const config = {\n      headers: {\n        \"Content-Type\": \"application/json\",\n        Authorization: `Bearer ${this.token}`,\n      },\n    };\n    await axios.post(endpoint, jsonData, config);\n  }\n\n  /**\n   * Gets user's ID\n   * https://developer.spotify.com/documentation/web-api/reference/users-profile/get-current-users-profile/\n   * @param  {string} userID - The user ID\n   * @param  {string} name - The name of the playlist\n   * @param  {string} description - The description\n   * @param  {boolean} isPublic - Whether or not the playlist will be public (default true)\n   * @return The playlist ID\n   */\n  async createPlaylist(userID, name, description, isPublic = true) {\n    const endpoint = `https://api.spotify.com/v1/users/${userID}/playlists`;\n    const jsonData = {\n      name: name,\n      description: description,\n      public: isPublic,\n    };\n\n    // set the headers\n    const config = {\n      headers: {\n        \"Content-Type\": \"application/json\",\n        Authorization: `Bearer ${this.token}`,\n      },\n    };\n    const response = await axios.post(endpoint, jsonData, config);\n    return response.data.id;\n  }\n\n  /**\n   * Gets user's ID\n   * https://developer.spotify.com/documentation/web-api/reference/users-profile/get-current-users-profile/\n   * @return The ID of the current user\n   */\n  async getUserID() {\n    const endpoint = `https://api.spotify.com/v1/me`;\n    const response = await axios.get(endpoint, {\n      headers: {\n        Authorization: `Bearer ${this.token}`,\n      },\n    });\n    return response.data.id;\n  }\n\n  /**\n   * Gets users top tracks/artists in a given time range:\n   * https://developer.spotify.com/documentation/web-api/reference/personalization/get-users-top-artists-and-tracks/\n   * @param  {string} type - The type of entity to return. Valid values: artists or tracks.\n   * @param {string} time_range - Over what time frame the affinities are computed. Valid values: long_term, medium_term, short_term\n   * @param {number} limit - The number of entities to return. Default: 20. Minimum: 1. Maximum: 50.\n   * @return An array of track or artists objects\n   */\n  async getUserFavorites(type, time_range, limit = 20) {\n    const endpoint = `https://api.spotify.com/v1/me/top/${type}`;\n    const response = await axios.get(endpoint, {\n      headers: {\n        Authorization: `Bearer ${this.token}`,\n      },\n      params: {\n        time_range: time_range,\n        limit: limit,\n      },\n    });\n    return response.data.items;\n  }\n\n  /**\n   * Searches spotify for a playlist given search terms and the owner\n   * @param  {Array<string>} searchTerms - An array of search terms\n   * @param {string} owner - The owner of the playlist\n   * @return playlist object with id and name fields\n   */\n  async searchForPlaylist(searchTerms, owner) {\n    const endpoint = \"https://api.spotify.com/v1/search\";\n    let res = await axios.get(endpoint, {\n      headers: {\n        Authorization: `Bearer ${this.token}`,\n      },\n      params: {\n        q: searchTerms.join(\"%20\"),\n        type: \"playlist\",\n        limit: \"10\",\n      },\n    });\n    const result = res.data.playlists.items.filter((item) => {\n      let isTermInName = true;\n      // Checks if search terms are in the name of the playlist\n      searchTerms.forEach((term) => {\n        isTermInName =\n          isTermInName && item.name.toLowerCase().includes(term.toLowerCase());\n      });\n      // If the search terms in name and owner matches playlist owner name return item\n      return (\n        isTermInName &&\n        item.owner.display_name.toLowerCase().includes(owner.toLowerCase())\n      );\n    });\n    return result;\n  }\n\n  /**\n   * Gets details of a playlist given the id\n   * @param  {string} id - The id of the playlist\n   * @return an object containing the name and tracks of the playlist\n   */\n  async getPlaylist(id) {\n    const endpoint = \"https://api.spotify.com/v1/playlists/\";\n    let res = await axios.get(`${endpoint}${id}`, {\n      headers: {\n        Authorization: `Bearer ${this.token}`,\n      },\n      params: {\n        fields: \"name,tracks.items(track)\",\n      },\n    });\n    return {\n      name: res.data.name,\n      tracks: res.data.tracks.items,\n    };\n  }\n\n  /**\n   * Gets an array of 50 tracks that the user recently played\n   * @return {Array<SimpleTrack>} - An array of simple track objects from Spotify\n   */\n  async getRecentTracks() {\n    const endpoint = \"https://api.spotify.com/v1/me/player/recently-played\";\n    let res = await axios.get(endpoint, {\n      headers: {\n        Authorization: `Bearer ${this.token}`,\n      },\n      params: {\n        limit: 50,\n      },\n    });\n    return res.data.items;\n  }\n\n  /**\n   * Gets the features of an array of tracks\n   * @param  {Array<SimpleTrackObject>} tracks - An array of Spotify tracks to analyze\n   * @return {Array<Objects>} - An array of objects that contain trackID, acousticness, danceability, energy, valence, and popularity properties\n   */\n  async getTrackFeatures(tracks, features) {\n    let ids = [];\n    tracks.forEach((item) => {\n      if (item.track) {\n        ids.push(item.track.id);\n      } else {\n        ids.push(item.id);\n      }\n    });\n    const endpoint = \"https://api.spotify.com/v1/audio-features\";\n    let res = await axios.get(endpoint, {\n      headers: {\n        Authorization: `Bearer ${this.token}`,\n      },\n      params: {\n        ids: ids.join(),\n      },\n    });\n    let results = [];\n\n    res.data.audio_features.forEach((trackFeatures) => {\n      if (!trackFeatures) {\n        return null;\n      }\n      let result = {};\n      features.forEach((feature) => {\n        if (feature === \"popularity\") {\n          const correspondingTrack = tracks.find(\n            (item) =>\n              (item.track ? item.track.id : item.id) === trackFeatures.id\n          );\n          result[feature] = correspondingTrack.track\n            ? correspondingTrack.track.popularity\n            : correspondingTrack.popularity;\n        } else if (\n          trackFeatures &&\n          Object.keys(trackFeatures).includes(feature)\n        ) {\n          result[feature] = trackFeatures[feature];\n        }\n      });\n      results.push(result);\n    });\n    return results;\n  }\n}\n\nexport default Api;\n","import React, { Component } from \"react\";\nimport Container from \"react-bootstrap/Container\";\nimport axios from \"axios\";\nimport Row from \"react-bootstrap/Row\";\nimport Col from \"react-bootstrap/Col\";\nimport Fade from \"react-reveal/Fade\";\nimport BSFade from \"react-bootstrap/Fade\";\nimport HeaderSmall from \"../../Assets/header-small.png\";\nimport HeaderLarge from \"../../Assets/header-large.png\";\n\nimport ResultItem from \"./ResultItem\";\n\nimport Api from \"../../Api\";\n\nclass Dashboard extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      buttonCopy: \"Get Meddy With It\",\n      currentlyPlaying: \"\",\n      finalPercentages: [],\n      index: 0,\n      isLoading: true,\n      label: \"Enter a song URI to start getting Meddy with it:\",\n      moreDanceableRecommendations: [],\n      recommendationsPresent: false,\n      resultsTableHeading: \"\",\n      seed_artists: \"3faEZMpTmZFXpELU1EwWNL\",\n      seed_genres: \"renaissance%2C%20medieval%2C%20baroque\",\n      seed_tracks: \"5zBEauh8r5N1nroTKIBtdH\",\n      showValidation: \"\",\n      targetTrackDanceability: \"\",\n      userInput: [],\n      userTrack: {},\n      userTrackDanceability: \"\",\n    };\n    this.getTrackFeatures = this.getTrackFeatures.bind(this);\n    this.handleChange = this.handleChange.bind(this);\n    this.playTrack = this.playTrack.bind(this);\n    this.resetMedifyer = this.resetMedifyer.bind(this);\n    this.showNextRecommendation = this.showNextRecommendation.bind(this);\n    this.showValidationError = this.showValidationError.bind(this);\n  }\n\n  async getTrackFeatures(event) {\n    event.preventDefault();\n\n    let audioFeaturesEndpoint = \"https://api.spotify.com/v1/audio-features\";\n    let getTrackEndpoint = \"https://api.spotify.com/v1/tracks/\";\n    let recommendationsEndpoint = \"https://api.spotify.com/v1/recommendations\";\n\n    let seed_artists = this.state.seed_artists;\n    let seed_genres = this.state.seed_genres;\n    let seed_tracks = this.state.seed_tracks;\n\n    let re = /[\\w\\:]*\\:(\\w+)/;\n    let userInput = this.state.userInput;\n\n    if (re.test(userInput) && userInput.length>1) {//if it's an existing and valid user input, go ahead and get audio features.\n      this.setState({\n        userInput: this.state.userInput,\n      });\n\n      let userInput = this.state.userInput.match(/[\\w\\:]*\\:(\\w+)/)[1];\n\n      this.setState({\n        moreDanceableRecommendations: [], //i think grouping this with other set states means that if you put in something that has no results first, it returns nothing/doesn't make the api call yet.\n        showValidation: \"\",\n      });\n\n      let userTrack = await axios.get(`${getTrackEndpoint}${userInput}`, {\n        headers: {\n          Authorization: `Bearer ${this.props.token}`,\n        },\n      });\n\n      this.setState({\n        userTrack: userTrack,\n      });\n\n      let res = await axios.get(`${audioFeaturesEndpoint}?ids=${userInput}`, {\n        headers: {\n          Authorization: `Bearer ${this.props.token}`,\n        },\n      });\n\n      let danceabilityScore = res.data.audio_features[0].danceability;\n      let targetDanceability = danceabilityScore + .05;\n\n      this.setState({\n        userTrackDanceability: ((danceabilityScore) * 100).toFixed() + '%',\n      });\n\n      let response = await axios.get(`${recommendationsEndpoint}?seed_artists=${seed_artists}&seed_genres=${seed_genres}&seed_tracks=${seed_tracks}&min_danceability=${danceabilityScore}&target_danceability=${targetDanceability}`, {\n        headers: {\n          Authorization: `Bearer ${this.props.token}`,\n        },\n      });\n\n      let tracksHavePreviewURL = [];\n\n      response.data.tracks.forEach((track) => {\n        if (track.preview_url) {\n          tracksHavePreviewURL.push(track);\n        }\n      }); // only tracks which have a previewURL get pushed\n\n      if (tracksHavePreviewURL && tracksHavePreviewURL.length > 1) {//if that uri does return some recommendations\n        this.setState({\n          moreDanceableRecommendations: tracksHavePreviewURL,\n        }); // set the recommendations state\n\n        let resultTrackID = [];\n\n        this.state.moreDanceableRecommendations.forEach((track) => {\n          resultTrackID.push(track.id);\n        }); // set the recommendations percentages\n\n        let resultsDanceability = await axios.get(audioFeaturesEndpoint, {\n          headers: {\n            Authorization: `Bearer ${this.props.token}`,\n          },\n          params: {\n            ids: resultTrackID.join(),\n          },\n        });\n\n        let resultDanceabilityPercentages = [];\n\n        resultsDanceability.data.audio_features.forEach((result) => {\n          resultDanceabilityPercentages.push((result.danceability * 100).toFixed() + '%');\n        });\n\n        this.setState({\n          finalPercentages: resultDanceabilityPercentages,\n          resultsTableHeading: \"Your medieval equivalent:\",\n          userInput: [],\n          buttonCopy: \"Try another track URI\",\n          recommendationsPresent: true,\n          showValidation: \"\",\n        });\n      } else { //if the uri doesn't return any recommendations, just show arbitrary ones\n        let alternativeRecommendations = await axios.get(`${recommendationsEndpoint}?seed_artists=${seed_artists}&seed_genres=${seed_genres}&seed_tracks=${seed_tracks}&min_danceability=0.65`, {\n          headers: {\n            Authorization: `Bearer ${this.props.token}`,\n          },\n        });\n\n        let resultTrackID = [];\n\n        alternativeRecommendations.data.tracks.forEach((track) => {\n          resultTrackID.push(track.id);\n        }); // set the recommendations percentages\n\n        let resultsDanceability = await axios.get(audioFeaturesEndpoint, {\n          headers: {\n            Authorization: `Bearer ${this.props.token}`,\n          },\n          params: {\n            ids: resultTrackID.join(),\n          },\n        });\n\n        let resultDanceabilityPercentages = [];\n\n        resultsDanceability.data.audio_features.forEach((result) => {\n          resultDanceabilityPercentages.push((result.danceability * 100).toFixed() + '%');\n        });\n\n        this.setState({\n          finalPercentages: resultDanceabilityPercentages,\n          moreDanceableRecommendations: alternativeRecommendations.data.tracks,\n          resultsTableHeading: \"OK, this is embarrassing, but it seems you’ve found the limits of medieval-ness. Here are some things which are kinda close:\",\n          userInput: [],\n          buttonCopy: \"Try another track URI\",\n          recommendationsPresent: true,\n          showValidation: \"\",\n        });\n      }\n    } else if (this.state.moreDanceableRecommendations.length>1) {\n      //assume user is trying a new track.\n      this.resetMedifyer();\n    } else if ((!re.test(userInput))) {\n      //...and then if that doesn't match the reg ex, exit out with a validation error.\n      this.showValidationError();\n    }\n  }\n\n  handleChange(event) {\n    this.setState({\n      userInput: event.target.value,\n    });\n  }\n\n  showValidationError() {\n    this.setState({\n      userInput: [],\n      showValidation: \"That doesn't seem to be a valid track URI.\",\n      moreDanceableRecommendations: [],\n      userTrack: {},\n      userTrackDanceability: \"\",\n      recommendationsPresent: false,\n      buttonCopy: \"Try another track URI\",\n    });\n  }\n\n  showNextRecommendation(event) {\n    event.preventDefault();\n\n    let looper = ++this.state.index % this.state.moreDanceableRecommendations.length;\n    this.setState({\n      index: looper\n    });\n\n    if (document.getElementById(\"player\")) {\n      let audioPlayer = document.getElementById(\"player\");\n      this.playTrack(audioPlayer);\n    }\n  }\n\n  resetMedifyer() {\n    this.setState({\n      userInput: [],\n      showValidation: \"\",\n      moreDanceableRecommendations: [],\n      userTrack: {},\n      userTrackDanceability: \"\",\n      recommendationsPresent: false,\n      buttonCopy: \"Get Meddy With It\",\n    });\n\n    if (document.getElementById(\"player\")) {\n      let audioPlayer = document.getElementById(\"player\");\n      this.playTrack(audioPlayer);\n    }\n  }\n\n  playTrack(previewURL) {\n    let activeTrack = document.getElementById(\"player\");\n\n    if (!activeTrack) {\n      activeTrack = new Audio(previewURL);\n      activeTrack.setAttribute(\"id\", \"player\");\n      activeTrack.onended = () => this.setState({ currentlyPlaying: \"\", });\n\n      activeTrack.volume = 1;\n      document.getElementById(\"result-item\").append(activeTrack);\n      activeTrack.play();\n      this.setState({ currentlyPlaying: previewURL, });\n    } else {\n      if (activeTrack.paused) {\n        activeTrack.play();\n        this.setState({ currentlyPlaying: previewURL, });\n      } else {\n        activeTrack.pause();\n        this.setState({ currentlyPlaying: \"\", });\n      }\n      if (activeTrack.src !== previewURL) {\n        activeTrack.currentTime = 0;\n        activeTrack.src = previewURL;\n        activeTrack.play();\n        this.setState({ currentlyPlaying: previewURL, });\n      }\n    }\n  }\n\n  async componentDidMount() {\n    try {\n      const API = new Api(this.props.token);\n      let requestFeatures = [\n        \"acousticness\",\n        \"danceability\",\n        \"energy\",\n        \"instrumentalness\",\n        \"liveness\",\n        \"speechiness\",\n        \"valence\",\n        \"popularity\",\n      ];\n\n////DELETING THIS PROMTS WHOLE APP TO NOT LOAD\n      const recentTracksFeatures = await API.getTrackFeatures(\n        requestFeatures\n      );\n\n      this.setState({\n        isLoading: false,\n      });\n\n      this.props.load();\n    } catch (error) {\n      console.log(error);\n      if (error.response && error.response.status === 401)\n        this.props.handleTimeout();\n    }\n    this.uriInput.focus();\n  }\n  componentWillUnmount() {\n    clearInterval(this.interval);\n  }\n\n  render() {\n    const showResults = this.state.moreDanceableRecommendations && this.state.moreDanceableRecommendations.length > 0;\n    const showError = this.state.showValidation;\n    const startingTrack = ((this.state.userTrack.data || {}) || {});\n    const showInput = this.state.recommendationsPresent;\n    let results;\n    let recommendations = ((this.state.moreDanceableRecommendations || {}) || {});\n    const handleKeyDown = (event) => {\n    if (event.key === 'Enter') {\n      console.log('do validate')\n    }\n  }\n\n    results =\n    recommendations.map((track, index) => (\n        <ResultItem\n          type=\"result-track\"\n          key={index.id}\n          title={track.name}\n          subtitle={track.artists[0].name}\n          image={\n            track.album.images[0] === undefined\n              ? null\n              : track.album.images[0].url\n          }\n          previewURL={track.preview_url}\n          uri={track.external_urls.spotify}\n          playTrack={this.playTrack}\n          isPlaying={this.state.currentlyPlaying === track.preview_url}\n          percentage={this.state.finalPercentages[index]}\n        />\n    )\n  );\n\n    return this.state.isLoading ? null : (\n      <div>\n        <Container fluid className={\"mb-4 mt-2 header\"}>\n          <a href=\"https://mowf02.github.io/medifye.github.io/\">\n            <picture>\n              <source srcSet={`${HeaderSmall} 1x`} media=\"(max-width: 768px)\" />\n              <img\n                className=\"logo\"\n                srcSet={`${HeaderLarge} 2x`}\n                alt=\"Full Logo\" />\n            </picture>\n          </a>\n        </Container>\n        <Container fluid className={\"mb-4 mt-2\"}>\n          <p>Give <i>Medifye</i> any track on Spotify, and it will recommend a medieval* equivalent which is more danceable. Even if your favourite tune is <i>Sandstorm</i> by Darude.</p>\n        </Container>\n        <div className=\"container-fluid container-flex\">\n          <div className=\"container-left\">\n            {showInput ? <div>You've Medifyed this track:</div> : <span></span>}\n            <form onSubmit={this.getTrackFeatures} name=\"uriForm\" id=\"URI\">\n              { showInput ? <div className=\"test\"></div> :\n              <div className=\"inputDiv\">\n                <label>Enter a Spotify track URI:</label>\n                <input type=\"text\" className=\"uriInput\" name=\"uriInput\" value={this.state.userInput} onChange={event => this.handleChange(event)} ref={(input) => { this.uriInput = input; }} onKeyDown={handleKeyDown}/>\n                <div className=\"validation\">{this.state.showValidation}</div>\n                <input type=\"submit\" className=\"button-primary\" value={this.state.buttonCopy} />\n              </div> }\n            </form>\n            { showInput ? <div></div> : <div className=\"helper\">You can copy a track URI by right-clicking any track and tapping \"share\"</div>}\n            { this.state.userTrack.data ? <ResultItem\n              type=\"track\"\n              key={startingTrack.id}\n              title={startingTrack.name}\n              subtitle={startingTrack.artists[0].name}\n              image={\n                startingTrack.album.images[0] === undefined\n                  ? null\n                  : startingTrack.album.images[0].url\n              }\n              previewURL={startingTrack.preview_url}\n              uri={startingTrack.external_urls.spotify}\n              playTrack={this.playTrack}\n              isPlaying={this.state.currentlyPlaying === startingTrack.preview_url}\n              percentage={this.state.userTrackDanceability}\n            /> : <div></div> }\n          </div>\n          <div className=\"container-right\">\n            {showInput ? <div>{this.state.resultsTableHeading}</div> : <div></div>}\n            {results[this.state.index]}\n            {showInput ? <form name=\"resetForm\">\n              <input type=\"submit\" onClick={this.showNextRecommendation} className=\"button-primary\" value=\"Show me another\" />\n              <input type=\"submit\" onClick={this.resetMedifyer} className=\"button-secondary\" value=\"Start again\" />\n            </form> : <div></div> }\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default Dashboard;\n","import React from \"react\";\nimport loader from \"../Assets/loader.gif\";\nimport Fade from \"react-reveal/Fade\";\n\nexport default function Loading() {\n  return (\n    <div\n      style={{\n        height: \"100vh\",\n        display: \"flex\",\n        flexDirection: \"column\",\n        alignItems: \"center\",\n        justifyContent: \"center\",\n      }}\n    >\n      <Fade>\n        <img\n          src={loader}\n          style={{ maxHeight: \"40vh\", maxWidth: \"80vw\" }}\n          alt=\"loading animation\"\n        />\n        <span>https://giphy.com/kiszkiloszki</span>\n        <h1>Getting ready to Meddy...</h1>\n      </Fade>\n    </div>\n  );\n}\n","import React from \"react\";\n\nexport default function Loading() {\n  return (\n    <footer className=\"container-fluid mt-2 mb-4\">\n      <h6>\n        Built by{\" \"}\n        <a\n          href=\"http://lizmowforth.com/\"\n          target=\"_blank\"\n        >\n          {\" \"}\n          Liz Mowforth\n        </a>\n          {\" \"}using React and the Spotify API.\n      </h6>\n      <h6>*with a healthy dose of baroque, renaissance, and miscellaneous other thrown in for good measure.</h6>\n    </footer>\n  );\n}\n","import React from \"react\";\nimport Container from \"react-bootstrap/Container\";\nimport Dashboard from \"../Components/Mood/Dashboard\";\nimport Loading from \"../Components/Loading\";\nimport Footer from \"../Components/Footer\";\n\nclass MainDisplay extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      isLoading: true,\n      childComponentIsLoading: true,\n    };\n  }\n\n  /**\n   * Updates the loading status of the component based on loading status of child components\n   */\n  updateLoadingStatus() {\n    if (\n      !this.state.childComponentIsLoading\n    ) {\n      this.setState({\n        isLoading: false,\n      });\n    }\n  }\n\n  /**\n   * Updates the loading status of the mood dashboard in the state\n   */\n  loadDashboard() {\n    this.setState({\n      childComponentIsLoading: false,\n    });\n    this.updateLoadingStatus();\n  }\n\n  render() {\n    return (\n      <React.Fragment>\n        {this.state.isLoading && <Loading />}\n        <Container fluid=\"lg\">\n          <Dashboard\n            token={this.props.token}\n            load={() => this.loadDashboard()}\n            handleTimeout={() => this.props.handleTimeout()}\n          />\n          <Footer />\n        </Container>\n      </React.Fragment>\n    );\n  }\n}\n\nexport default MainDisplay;\n","import React from \"react\";\nimport \"./App.css\";\nimport hash from \"./hash\";\nimport { loginURL } from \"./config\";\nimport Login from \"./Views/Login\";\nimport MainDisplay from \"./Views/MainDisplay\";\n\nclass App extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      isLoggedIn: false,\n      token: null,\n    };\n  }\n\n  componentDidMount() {\n    let _token = hash.access_token;\n    if (_token) {\n      // Set token\n      this.setState({\n        token: _token,\n      });\n    }\n  }\n\n  handleLogin() {\n    window.location.replace(loginURL);\n    this.setState({\n      isLoggedIn: true,\n    });\n  }\n\n  render() {\n    return (\n      <div className=\"App\">\n        {!this.state.token && (\n          <Login\n            isLoggedIn={this.state.isLoggedIn}\n            handleLogin={() => this.handleLogin()}\n          />\n        )}\n        {this.state.token && (\n          <MainDisplay\n            token={this.state.token}\n            handleTimeout={() => this.handleLogin()}\n          />\n        )}\n      </div>\n    );\n  }\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"bootstrap/dist/css/bootstrap.min.css\";\nimport \"./index.css\";\nimport App from \"./App\";\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n"],"sourceRoot":""}